name: 'Builder and test our eShop'

on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  # install node modules and save it to cache for the other jobs
  Install:
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          token: ${{secrets.WORKFLOW_TOKEN}}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '10'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: node_modules-

      - name: Install packages with npm
        run: |
          npm ci

  # use node_modelus from cache and build app
  Build:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          token: ${{secrets.WORKFLOW_TOKEN}}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '10'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Build
        run: |
          npm rebuild node-sass --force
          npm run build -- --colors

      - name: Cache node modules and build folder
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm 
            ./node_modules
            ./build
          key: ${{ runner.os }}-build-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-build-${{ github.run_id }}

  #run tests
  Test:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          token: ${{secrets.WORKFLOW_TOKEN}}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '10'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Run tests
        run: |
          npm run test -- --colors

  #deploy
  Deploy:
    needs: [Build, Test]
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}
    env:
      ANSIBLE_VAULT_PASS: ${{ secrets.VAULT_PASS_AWS }}
      SSH_KEY_AWS: ${{ secrets.SSH_KEY_AWS }}

    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          token: ${{secrets.WORKFLOW_TOKEN}}

      - name: Install Ansible
        run: pip3 install ansible boto boto3

      - name: Setting vault password
        run: |
          echo "$ANSIBLE_VAULT_PASS" > vault_pass.txt 
          chmod 400 vault_pass.txt
          echo "$SSH_KEY_AWS" > devops.pem
          chmod 400 devops.pem
          sudo ssh-keygen -p -f devops.pem -m pem
          
      - name: Ansible Playbook
        run: ansible-playbook ansible/ec2_deploy.yaml --ssh-common-args='-o StrictHostKeyChecking=no' --user ec2-user --key-file devops.pem --e @ansible/group_vars/all/aws.yml --vault-password-file vault_pass.txt
